name: ci/cd
on: [push, pull_request]
env:
  lowest_python_version: 3.9
  python_package_distributions: python-package-distributions

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.lowest_python_version }}
    - run: python -m pip install -e ./[dev]
    - run: python -m pre_commit run -a

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: python -m pip install -e ./[dev]
    - run: python -m pytest
    - uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        verbose: true
        token: ${{ secrets.CODECOV_IO_TOKEN }}

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.lowest_python_version }}
    - run: python -m pip install build
    - run: python -m build
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.python_package_distributions }}
        path: dist/*
        if-no-files-found: error
        retention-days: 14

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    environment:
      name: pypi
      url: https://pypi.org/project/aioftp
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ${{ env.python_package_distributions }}
        path: dist
    - uses: pypa/gh-action-pypi-publish@release/v1
